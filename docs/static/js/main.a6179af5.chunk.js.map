{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"4MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,cAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,0FAE0EC,UAAUH,GAFpF,sBAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXtB,kBAebM,GAfa,4CAAH,sDCFRO,EAAc,SAAEC,GAEzB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAChC,4BAAII,EAAMJ,YCFTQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLc,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAW,WACPzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAKmB,EACLL,SAAS,SAGtB,CAACrB,IAEGsB,EDdwBK,CAAc3B,GAAjCa,EAHuB,EAG5BN,KAAac,EAHe,EAGfA,QAUpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAElDqB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAGQJ,EAAOJ,KAAK,SAACC,GACT,OACI,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEKlBiB,EA/BO,WAAI,MAGc1C,mBAAS,CAAC,cAHxB,mBAGf2C,EAHe,KAGH5C,EAHG,KAWtB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAACT,GACb,OAAO,cAAC,EAAD,CAEPA,SAAYA,GADLA,YCnBzB8B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.a6179af5.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('Hola Mundo')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\n export const getGifs = async (category) => {\r\n        \r\n    const url =`https://api.giphy.com/v1/gifs/search?api_key=iDPdOL0fDBueDU4fozIy9lQOJw5YS92A&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n    //console.log(props)\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={props.url} alt={props.title}/>\r\n            <p>{props.title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images, setImages] = useState([])\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    \r\n\r\n    // useEffect( () => {\r\n    //     getGifs(category)\r\n    //         .then( imgs => setImages(imgs))\r\n    // }, [ category ])\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__bounce'>{category}</h3>\r\n\r\n        {loading && <p>Loading</p>}\r\n\r\n        <div className='card-grid'>\r\n            \r\n            {\r\n                images.map( (img) => {\r\n                    return (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category  ])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = (()=>{\r\n\r\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One punch' ])\r\n    \r\n    // const handleAdd = (e) =>{\r\n    //     //const cat = [...categories, 'Israel']\r\n        \r\n    //     setCategories( cats => [...cats, 'Israel']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            {/* <button onClick = {handleAdd} >Agregaar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => {\r\n                        return <GifGrid \r\n                        key = {category}\r\n                        category = {category}/>\r\n                    })\r\n                }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nconst divRoot = document.querySelector('#root')\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  divRoot\n);\n\n"],"sourceRoot":""}